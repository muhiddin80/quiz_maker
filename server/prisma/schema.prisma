enum Role {
  ADMIN @map("ADMIN")
  USER @map("USER")
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @default(autoincrement()) @map("id") @db.Integer
  username String @map("username") @db.VarChar()
  email String @unique() @map("email") @db.VarChar()
  password String @map("password") @db.VarChar()
  role Role @default(USER) @map("role")
  token String? @map("token") @db.VarChar()
  collections QuizCollection[]

  @@id([id])
  @@map("users")
}

model QuizCollection{
  id Int @default(autoincrement()) @map("id") @db.Integer
  name String @map("name") @db.VarChar()
  userId Int @map("user_id") @db.Integer
  quizes Quizes[]

  user User @relation(fields: [userId],references: [id],onUpdate: NoAction,onDelete: Cascade)

  @@id([id])
  @@map("quiz_collection")
}

model Quizes {
  id Int @default(autoincrement()) @map("id") @db.Integer
  question String @map("quizes") @db.VarChar()
  imgUrl String? @map("img_url") @db.VarChar()
  collectionId Int @map("collection_id") @db.Integer
  answers Answers[]
  correctAnswer CorrectAnswer[]

  collection QuizCollection @relation(fields: [collectionId],references: [id],onDelete: Cascade,onUpdate: NoAction)

  @@id([id])
  @@map("quizes")
}

model Answers {
  id Int @default(autoincrement()) @map("id") @db.Integer
  answer String @map("answer") @db.VarChar()
  quizId Int @map("quiz_id") @db.Integer

  quizField Quizes @relation(fields: [quizId],references: [id],onDelete: Cascade,onUpdate: NoAction)

  @@id([id])
  @@map("answers")
}

model CorrectAnswer {
  id Int @default(autoincrement()) @map("id") @db.Integer
  quizId Int @unique() @map("quiz_id") @db.Integer
  answerId Int @map("answer_id") @db.Integer

  quizField Quizes @relation(fields: [quizId],references: [id],onDelete: Cascade,onUpdate: NoAction)
  @@id([id])
}